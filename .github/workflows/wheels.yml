name: Wheel build

on:
  release:
    types: [created]

jobs:
  sdist:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9

    - name: Install Python dependencies
      run: python -m pip install -r requirements.txt

    - name: Build sdist
      run: make sdist

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/*.tar.gz

    - name: Upload sdist
      uses: actions/upload-artifact@v2
      with:
        name: sdist
        path: dist/*.tar.gz

  Linux:
    runs-on: ubuntu-latest

    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false

      matrix:
        image:
          - manylinux1_x86_64
          - manylinux1_i686
          #- manylinux2010_x86_64
          #- manylinux2010_i686
          - manylinux_2_24_x86_64
          - manylinux_2_24_i686
          - manylinux_2_24_aarch64
          - musllinux_1_1_x86_64
          #- manylinux_2_24_ppc64le
          #- manylinux_2_24_ppc64le
          #- manylinux_2_24_s390x
        pyversion: ["*"]

        exclude:
          - image: manylinux_2_24_aarch64
            pyversion: "*"
        include:
          - image: manylinux2014_aarch64
            pyversion: "cp36*"
          - image: manylinux_2_24_aarch64
            pyversion: "cp37*"
          - image: manylinux_2_24_aarch64
            pyversion: "cp38*"
          - image: manylinux_2_24_aarch64
            pyversion: "cp39*"
          - image: manylinux_2_24_aarch64
            pyversion: "cp310*"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: python -m pip install -r requirements.txt

    - name: Build Linux wheels
      run: make USE_BUNDLE=true sdist wheel_${{ matrix.image }}
      env: { PYTHON_BUILD_VERSION: "${{ matrix.pyversion }}" }

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: wheelhouse_*/*-m*linux*.whl  # manylinux / musllinux

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels-${{ matrix.image }}
        path: wheelhouse_*/*-m*linux*.whl  # manylinux / musllinux
        if-no-files-found: ignore

  non-Linux:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false

      matrix:
        os: [macos-10.15, windows-latest]
        #os: [macos-10.15, windows-latest, macOS-M1]
        #os: [macos-10.15, macOS-M1]
        #os: [macos-10.15]
        python_version: ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10", "pypy-3.7-v7.3.3", "pypy-3.8-v7.3.7"]

        exclude:
          # outdated compilers and probably not worth supporting anymore
          - os: windows-latest
            python_version: 2.7
          - os: windows-latest
            python_version: 3.5

    runs-on: ${{ matrix.os }}
    env: { MACOSX_DEPLOYMENT_TARGET: 10.14 }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install MacOS dependencies
      if: startsWith(matrix.os, 'mac')
      run: |
        brew install automake libtool
        ln -s /usr/local/bin/glibtoolize /usr/local/bin/libtoolize

    - name: Install dependencies
      run: python -m pip install setuptools wheel -r requirements.txt

    - name: Build wheels
      run: make USE_BUNDLE=true sdist wheel

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/*.whl

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels-${{ matrix.os }}
        path: dist/*.whl
        if-no-files-found: ignore
